@@ -19,6 +19,7 @@ import java.net.URLClassLoader;
 import java.security.CodeSource;
 
 import org.aspectj.util.FileUtil;
+import org.aspectj.weaver.BCException;
 import org.aspectj.weaver.UnresolvedType;
 
 public abstract class ExtensibleURLClassLoader extends URLClassLoader {
@@ -64,7 +65,16 @@ public abstract class ExtensibleURLClassLoader extends URLClassLoader {
 
 	protected byte[] getBytes(String name) throws IOException {
 		byte[] b = null;
-		ClassPathManager.ClassFile classFile = classPath.find(UnresolvedType.forName(name));
+		UnresolvedType unresolvedType = null;
+		try {
+			unresolvedType = UnresolvedType.forName(name);
+		} catch (BCException bce) {
+			if (bce.getMessage().indexOf("nameToSignature") == -1) {
+				bce.printStackTrace(System.err);
+			}
+			return null;
+		}
+		ClassPathManager.ClassFile classFile = classPath.find(unresolvedType);
 		if (classFile != null) {
 			try {
 				b = FileUtil.readAsByteArray(classFile.getInputStream());
@@ -83,6 +83,20 @@ public class WeavingURLClassLoaderTest extends TestCase {
 		}
 	}
 
+	public void testGarbageName() {
+		setSystemProperty(WeavingURLClassLoader.WEAVING_ASPECT_PATH, "");
+		setSystemProperty(WeavingURLClassLoader.WEAVING_CLASS_PATH, WOVEN_JAR);
+		WeavingURLClassLoader loader = new WeavingURLClassLoader(getClass().getClassLoader());
+
+		try {
+			loader.loadClass("[Lorg.springframework.webflow.config.FlowLocation;Editor");
+		} catch (ClassNotFoundException cnfe) {
+			// success!
+		} catch (Exception ex) {
+			fail(ex.toString());
+		}
+	}
+
 	/*
 	 * We get an exception because the class was not built reweavable
 	 */
@@ -490,10 +504,11 @@ public class WeavingURLClassLoaderTest extends TestCase {
 			method.invoke(null, params);
 		} catch (InvocationTargetException ex) {
 			Throwable targetException = ex.getTargetException();
-			if (targetException instanceof RuntimeException)
+			if (targetException instanceof RuntimeException) {
 				throw (RuntimeException) ex.getTargetException();
-			else
+			} else {
 				throw new RuntimeException(ex.getTargetException().toString());
+			}
 		} catch (Exception ex) {
 			throw new RuntimeException(ex.toString());
 		}
@@ -523,10 +538,11 @@ public class WeavingURLClassLoaderTest extends TestCase {
 		for (Enumeration enu = savedProperties.keys(); enu.hasMoreElements();) {
 			String key = (String) enu.nextElement();
 			String value = savedProperties.getProperty(key);
-			if (value == NULL)
+			if (value == NULL) {
 				systemProperties.remove(key);
-			else
+			} else {
 				systemProperties.setProperty(key, value);
+			}
 		}
 	}
 
