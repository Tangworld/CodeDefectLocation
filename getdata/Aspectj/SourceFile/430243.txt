@@ -0,0 +1,32 @@
+package com.test;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import com.test2.PolicyManager;
+
+public aspect PackageManagerAspect {
+	pointcut intentquery () : execution(* foo(..));
+	private static final String TAG = "PackageManagerAspect";
+	
+	Object around(): intentquery() {
+//		return compute();
+		switch (PolicyManager.getOpenInPolicy(false)) {
+			case UNRESTRICTED:			break;
+			case RESTRICTED:			break;
+			case BLOCKED:
+			default:			break;
+		}
+		return "";
+	}
+	
+	public Object compute() {
+		switch (PolicyManager.getOpenInPolicy(false)) {
+		case UNRESTRICTED:			break;
+		case RESTRICTED:			break;
+		case BLOCKED:
+		default:			break;
+		}
+		return "";
+	}
+}
@@ -0,0 +1,20 @@
+package com.test2;
+
+import com.test2.PolicyProviderConstants.OpenInPolicyValues;
+
+public class PolicyManager {
+	public static OpenInPolicyValues getOpenInPolicy (boolean showDialog)
+	{
+		OpenInPolicyValues value = PolicyProviderInterface.getOpenInPolicy();
+		
+		return value;
+	}
+	
+	public static void main(String[] args) {
+		new PolicyManager().foo();
+	}
+	
+	public String foo() {
+		return "";
+	}
+}
\ No newline at end of file
@@ -0,0 +1,38 @@
+package com.test2;
+
+public interface PolicyProviderConstants 
+{
+	public static final String featureSMS = "Sms";
+	public static final String featureCamera = "Camera";
+	public static final String featureAudio = "Microphone";
+	public static final String featureLocation = "Location";
+	public static final String featureSensor = "Sensor";
+	public static final String featureSnapshot = "ScreenCapture";
+	public static final String featureNFC = "nfc";
+	
+	public static final String featureClipboard = "CutAndCopy";
+	public static final String featureOpenIn = "DocumentExchange";
+	
+	public static final String policySecurityGroup = "SecurityGroup";
+	
+	public static final String featureNetworkAccess = "NetworkAccess";
+
+	public static final String featureAuthSupport = "AuthSupport";
+	public static final String featureNETWORKACCESSMODE = "PreferredVpnMode";
+	public static final String policyOpenInExclusionList = "OpenInExclusionList";
+	
+	public enum CutCopyPolicyValues
+	{
+		BLOCKED,
+		RESTRICTED,
+		UNRESTRICTED,
+	};
+
+	public enum OpenInPolicyValues
+	{
+		BLOCKED,
+		RESTRICTED,
+		UNRESTRICTED,
+	};
+	
+}
@@ -0,0 +1,32 @@
+package com.test2;
+
+import com.test2.PolicyProviderConstants.OpenInPolicyValues;
+
+//import android.content.ContentResolver;
+//import android.database.Cursor;
+//import android.net.Uri;
+//import android.os.Binder;
+//import android.text.TextUtils;
+//import android.util.Log;
+
+
+// Interface to calls to ManagedAppInfoProvider. this queries the policies and exposes interfaces for checks
+public class PolicyProviderInterface
+{
+	private static final String TAG = "PolicyProviderInterface";
+
+	private static final String STR_SECURITY_GROUP = "SecurityGroup";
+	private static final String STR_BLOCKED = "blocked";
+	private static final String VALUE_SECUREBROWSE = "SecureBrowse";
+	
+//	private static final String STR_PROVIDER_URI = PolicyProviderColumns.AUTHORITY + "." + PolicyManager.getPackageName() + "/" + PolicyProviderColumns.POLICY_INFO;
+//	private static final Uri 	providerURI = Uri.parse("content://"+ STR_PROVIDER_URI);
+
+
+	
+	public static OpenInPolicyValues getOpenInPolicy()
+	{
+		return OpenInPolicyValues.RESTRICTED;
+	}
+	
+}
@@ -21,6 +21,10 @@ import org.aspectj.testing.XMLBasedAjcTestCase;
  */
 public class Ajc175Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
+//	public void testIllegalAccessError_430243() throws Exception {
+//		runTest("illegalaccesserror");
+//	}
+	
 	public void testVertxVerifyError_423257() throws Exception {
 		runTest("vertx verify error");
 	}
@@ -31,7 +35,6 @@ public class Ajc175Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 		return XMLBasedAjcTestCase.loadSuite(Ajc175Tests.class);
 	}
 
-	@Override
 	protected File getSpecFile() {
 		return new File("../tests/src/org/aspectj/systemtest/ajc175/ajc175.xml");
 	}
@@ -2,6 +2,13 @@
 
 <suite>
 
+	<ajc-test dir="bugs175/pr430243" title="illegalaccesserror">
+		<compile files="PackageManagerAspect.java PolicyManager.java PolicyProviderConstants.java PolicyProviderInterface.java" options="-1.6">
+		</compile>
+		<run class="com.test2.PolicyManager">
+		</run>
+	</ajc-test>
+	
 	<ajc-test dir="bugs175/pr423257" title="vertx verify error">
 		<compile files="Test.java AspectX.java" options="-1.7">
 		</compile>
