@@ -0,0 +1,13 @@
+package pkg;
+
+import org.aspectj.lang.annotation.Aspect;
+import org.aspectj.lang.annotation.Before;
+
+@Aspect()
+public class AtAspectJAspect {
+
+	@Before("execution(* *.*())")
+	public void execOfEverything() {
+	}
+	
+}
@@ -0,0 +1,9 @@
+package pkg;
+
+public class C {
+	
+	public void foo() {
+		
+	}
+	
+}
@@ -167,6 +167,7 @@ public class Ajc153Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
   public void testNoInvalidAbsoluteTypeNameWarning_pr156904_3() {runTest("ensure no invalidAbsoluteTypeName when do match - 3");}
   public void testNoInvalidAbsoluteTypeNameWarning_pr156904_4() {runTest("ensure no invalidAbsoluteTypeName when do match - 4");}
 
+  public void testNoNPEWithThrownExceptionWarningAndAtAspectj_pr161217() {runTest("NPE with thrown exception warning and at aspectj");}
 
   /////////////////////////////////////////
   public static Test suite() {
@@ -742,4 +742,8 @@
 
     </ajc-test>
 
+    <ajc-test dir="bugs153/pr161217" title="NPE with thrown exception warning and at aspectj">
+      <compile files="AtAspectJAspect.java, C.java" options="-warn:+unusedThrown -1.5"/>
+    </ajc-test>
+
 </suite>
\ No newline at end of file
@@ -197,7 +197,7 @@ public class BcelAdvice extends Advice {
         // (bug 129282). This may be expanded to include other compiler warnings
         // at the moment it only deals with 'declared exception is not thrown'
         if (!shadow.getWorld().isIgnoringUnusedDeclaredThrownException() 
-        		&& !thrownExceptions.isEmpty()) {
+        		&& !getThrownExceptions().isEmpty()) {
         	Member member = shadow.getSignature();
         	if (member instanceof BcelMethod) {
         		removeUnnecessaryProblems((BcelMethod)member, 
