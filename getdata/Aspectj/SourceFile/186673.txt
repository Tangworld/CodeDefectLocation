Binary files differ
Binary files differ
@@ -0,0 +1,19 @@
+import org.aspectj.lang.annotation.*;
+import org.aspectj.lang.*;
+
+@interface I {}
+
+@I
+public class A {
+  public void m() {}
+}
+
+@Aspect
+class X {
+  @Around("execution(* (@I *).*(..))") 
+  public Object foo(ProceedingJoinPoint pjp) {
+return null;
+  }
+}
+
+
@@ -0,0 +1,3 @@
+public class Apple {
+  public void m() {}
+}
@@ -0,0 +1,6 @@
+public class Main {
+  public static void main(String []argv) {
+    new Apple().m();
+    new Orange().m();
+  }
+}
@@ -0,0 +1,3 @@
+public class Orange {
+  public void m() {}
+}
@@ -0,0 +1,18 @@
+<project name="ltw with funny libraries" default="default" basedir=".">
+    <target name="default" >
+      <echo> This script builds the AspectJ examples.  </echo>
+      <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
+          <classpath> 
+            <pathelement path="${aj.root}/lib/aspectj/aspectjtools.jar"/>
+          </classpath>
+      </taskdef>
+       <iajc destdir="${classes.dir}" argfiles="${list}" 
+       		fork="true"
+       		forkclasspath="${aspectjtools.jar}"
+          classpath="${aspectjrt.jar}"/>
+
+       <antcall target="Ajx-run" >
+         <param name="class" value="${class}"/>
+       </antcall>
+    </target>
+</project>
@@ -45,6 +45,7 @@ public class Ajc154Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 //		runTest("new pointcut designators in a reference pointcut");
 //	}
 
+	public void testJarsZipsNonStandardSuffix_pr186673() { runTest("jars and zips with non-standard suffix");}
 	//public void testGenericTypeParameterizedWithArrayType_pr167197() { runTest("generic type parameterized with array type");}
 
 
@@ -11,6 +11,17 @@
      <compile options="-1.5" files="AspectBreaker.java"/>
    </ajc-test>
 
+   <ajc-test dir="bugs154/pr186673" title="jars and zips with non-standard suffix">
+     <compile options="-1.5" files="Apple.java" outjar="apple.jar.0"/>
+     <compile options="-1.5" files="Orange.java" outjar="orange.zipfoo"/>
+     <!-- check ant and a standard compile -->
+     <!--ant file="ant.xml" target="default" verbose="true">
+        <stdout>
+   	      <line text="Blah"/>
+       	</stdout>
+     </ant-->
+     <compile options="-1.5" files="Main.java" classpath="orange.zipfoo,apple.jar.0"/>
+   </ajc-test>
 
    <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface">
      <compile options="-1.5" files="Bang.java"/>
