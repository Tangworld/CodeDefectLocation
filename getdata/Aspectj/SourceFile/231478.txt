@@ -19,6 +19,7 @@ import org.aspectj.testing.XMLBasedAjcTestCase;
 public class Ajc161Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
 	// AspectJ1.6.1
+	public void testGenericAbstractAspects_pr231478() { runTest("generic abstract aspects"); }
     public void testFieldJoinpointsAndAnnotationValues_pr227993() { runTest("field jp anno value"); }
     public void testGenericsBoundsDecp_pr231187() { runTest("generics bounds decp"); }
     public void testGenericsBoundsDecp_pr231187_2() { runTest("generics bounds decp - 2"); }
@@ -3,6 +3,9 @@
 <!-- AspectJ v1.6.1 Tests -->
 <suite>
 
+    <ajc-test dir="bugs161/pr231478" title="generic abstract aspects">
+        <compile files="Base.java Sub.java AbstractComponent.java AbstractWindow.java" options="-1.5"/>
+    </ajc-test>
 
     <ajc-test dir="bugs161/pr227993" title="field jp anno value">
         <compile files="FieldJP.java" options="-1.5"/>
@@ -215,7 +215,20 @@ public class TypeVariable {
 	// can match any type in the range of the type variable...
 	// XXX what about interfaces?
 	private boolean matchingBounds(TypeVariableReferenceType tvrt) {
-		if (tvrt.getUpperBound() != getUpperBound()) return false;
+		if (tvrt.getUpperBound() != getUpperBound()) {
+			UnresolvedType unresolvedCandidateUpperBound = tvrt.getUpperBound();
+			UnresolvedType unresolvedThisUpperBound = getUpperBound();
+			if (unresolvedCandidateUpperBound instanceof ResolvedType && unresolvedThisUpperBound instanceof ResolvedType) {
+				ResolvedType candidateUpperBound = (ResolvedType)unresolvedCandidateUpperBound;
+				ResolvedType thisUpperBound = (ResolvedType)unresolvedThisUpperBound;
+				if (!thisUpperBound.isAssignableFrom(candidateUpperBound)) {
+					return false;
+				}
+			} else {
+				// not right, they shouldnt have been unresolved...
+				return false;
+			}
+		}
 		if (tvrt.hasLowerBound() != (getLowerBound() != null)) return false;
 		if (tvrt.hasLowerBound() && tvrt.getLowerBound() != getLowerBound()) return false;
 		// either we both have bounds, or neither of us have bounds
@@ -379,6 +392,7 @@ public class TypeVariable {
 
 	public String getGenericSignature() {
 		return "T"+name+";";
+//		return "T"+getSignature();
 	}
 	public String getErasureSignature() {
 		return getFirstBound().getErasureSignature();
@@ -37,6 +37,7 @@ public class UnresolvedTypeVariableReferenceType extends UnresolvedType implemen
 	public void setTypeVariable(TypeVariable aTypeVariable) {
 		this.signature = "T" + aTypeVariable.getName() + ";"; //aTypeVariable.getUpperBound().getSignature();
 		this.typeVariable = aTypeVariable;
+		this.typeKind=TypeKind.TYPE_VARIABLE;
 	}
 
 	public ResolvedType resolve(World world) {
@@ -0,0 +1 @@
+abstract aspect AbstractComponent<C extends Base> {}
@@ -0,0 +1 @@
+abstract aspect AbstractWindow<W extends Sub> extends AbstractComponent<W> {}
@@ -0,0 +1 @@
+class Base {}
@@ -0,0 +1 @@
+class Sub extends Base {}
