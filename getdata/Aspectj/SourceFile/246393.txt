@@ -618,4 +618,20 @@ public class AjProblemReporter extends ProblemReporter {
 		super.duplicateMethodInType(type, methodDecl);
 	}
 
+    // pr246393 - if we are going to complain about privileged, we clearly don't know what is going on, so don't
+    // confuse the user 
+	public void parseErrorInsertAfterToken(
+		int start,
+		int end,
+		int currentKind,
+		char[] errorTokenSource,
+		String errorTokenName,
+		String expectedToken){
+		if (expectedToken.equals("privileged")) {
+			super.parseErrorNoSuggestion(start, end, currentKind, errorTokenSource, errorTokenName);
+		} else {
+			super.parseErrorInsertAfterToken(start, end, currentKind, errorTokenSource, errorTokenName, expectedToken);
+		}
+	}
+
 }
Binary files differ
Binary files differ
@@ -1107,12 +1107,10 @@
 
      <ajc-test dir="bugs150" pr="78314" title="good error message for unmatched member syntax">
         <compile files="pr78314.aj" options="-1.5">
-           <message kind="error" line="5" text="Syntax error, insert &quot;body&quot;"/>
-            <message kind="error" line="5" text="Syntax error on tokens, valid member declaration expected instead"/>
+          <message kind="error" line="5" text="Syntax error on token &quot;foo&quot;, no accurate correction available"/>
          </compile>
         <compile files="pr78314.aj">
-            <message kind="error" line="5" text="Syntax error, insert &quot;body&quot;"/>
-            <message kind="error" line="5" text="Syntax error on tokens, valid member declaration expected instead"/>
+          <message kind="error" line="5" text="Syntax error on token &quot;foo&quot;, no accurate correction available"/>
         </compile>
     </ajc-test>
 
@@ -0,0 +1,12 @@
+import java.io.*;
+package snippet;
+
+public class D {
+        public static String readContent(InputStream is) {
+                try {
+                } catch (IOException ioe) {
+                        ioe.printStackTrace();
+                }
+        }
+}
+
@@ -18,6 +18,15 @@ import org.aspectj.testing.XMLBasedAjcTestCase;
 
 public class Ajc164Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
+	public void testRogueErrors_pr246393_1() {
+		runTest("rogue errors - 1");
+	}
+
+//	public void testNameClash_pr262257() {
+//		runTest("name clash");
+//		fail("incomplete");
+//	}
+
 	public void testCompilingSpring_pr260384() {
 		runTest("compiling spring");
 	}
@@ -25,15 +34,15 @@ public class Ajc164Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 	public void testCompilingSpring_pr260384_2() {
 		runTest("compiling spring - 2");
 	}
-	
+
 	public void testCompilingSpring_pr260384_3() {
 		runTest("compiling spring - 3");
 	}
-	
+
 	public void testCompilingSpring_pr260384_4() {
 		runTest("compiling spring - 4");
 	}
-	
+
 	public void testAtAspectJDecp_pr164016() {
 		runTest("ataspectj decp 164016");
 	}
@@ -2,6 +2,17 @@
 
 <suite>
 
+    <ajc-test dir="bugs164/pr246393" title="rogue errors - 1">
+      <compile files="D.java" options="-1.5">
+        <message kind="error" line="2" text="error on token"/>
+      </compile>
+    </ajc-test> 
+
+    <ajc-test dir="bugs164/pr262257" title="name clash">
+      <compile files="C.java" options="-1.5">
+      </compile>
+    </ajc-test> 
+       
     <ajc-test dir="bugs164/pr260384" title="compiling spring">
       <compile files="Broken.java" options="-1.5">
       </compile>
