@@ -60,7 +60,8 @@ public class ExactAnnotationFieldTypePattern extends ExactAnnotationTypePattern
         resolved = true;
         FormalBinding formalBinding = scope.lookupFormal(formalName);
         if (formalBinding == null) {
-            scope.message(IMessage.ERROR, this, "when using @annotation(<annotationType>(<annotationField>)), <annotationField> must be bound");
+            scope.message(IMessage.ERROR, this, "When using @annotation(<annotationType>(<annotationField>)), <annotationField> must be bound");
+            return this;
         }
 
         annotationType = scope.getWorld().resolve(annotationType, true);
@@ -0,0 +1,35 @@
+import java.lang.annotation.*;
+
+public class CaseThirteen {
+
+  public static void main(String []argv) {
+
+    CaseThirteen o = new CaseThirteen();
+    o.a();
+    o.b();
+    o.c();
+    o.d();
+    o.e();
+  }
+
+                     public void a() {}
+  @Anno(value=Level.NONE,c=Color.RED)  public void b() {}
+  @Anno(value=Level.ONE)   public void c() {}
+  @Anno(value=Level.TWO,c=Color.GREEN)   public void d() {}
+  @Anno(value=Level.THREE,c=Color.BLUE) public void e() {}
+
+}
+
+enum Level { NONE, ONE, TWO, THREE; }
+enum Color { RED, GREEN, BLUE; }
+
+@Retention(RetentionPolicy.RUNTIME)
+@interface Anno { Level value(); Color c() default Color.GREEN; }
+
+aspect X {
+ 
+  before(String l): execution(@Anno !@Anno(Level.NONE) * *(..)) && @annotation(Anno(l)) && @annotation(Anno(c)) {
+    System.out.println(l+""+c);
+  }
+}
+
@@ -57,6 +57,9 @@ public class OptimizedAnnotationFieldBinding extends XMLBasedAjcTestCase {
     public void testCaseTwelve_BindingAnnoAndAnnoValue() {
         runTest("case twelve - binding anno and anno value");
     }
+    public void testCaseThirteen_bugNPE() {
+        runTest("case thirteen - bug npe");
+    }
 
 	/////////////////////////////////////////
 	public static Test suite() {
@@ -115,4 +115,14 @@
      </run>
    </ajc-test>
 
+   
+   <ajc-test dir="features161/optimizedAnnotationBinding" title="case thirteen - bug npe">
+     <compile options="-1.5" files="CaseThirteen.java">
+       <message kind="error" line="31" text="The field within the annotation must be an Enum"/>
+       <message kind="error" line="31" text="No field of type 'java.lang.String'"/>
+       <message kind="error" line="31" text="When using @annotation"/>
+       <message kind="error" line="32" text="cannot be resolved"/>
+     </compile>
+   </ajc-test>
+   
 </suite>
\ No newline at end of file
@@ -60,7 +60,8 @@ public class ExactAnnotationFieldTypePattern extends ExactAnnotationTypePattern
         resolved = true;
         FormalBinding formalBinding = scope.lookupFormal(formalName);
         if (formalBinding == null) {
-            scope.message(IMessage.ERROR, this, "when using @annotation(<annotationType>(<annotationField>)), <annotationField> must be bound");
+            scope.message(IMessage.ERROR, this, "When using @annotation(<annotationType>(<annotationField>)), <annotationField> must be bound");
+            return this;
         }
 
         annotationType = scope.getWorld().resolve(annotationType, true);
@@ -0,0 +1,35 @@
+import java.lang.annotation.*;
+
+public class CaseThirteen {
+
+  public static void main(String []argv) {
+
+    CaseThirteen o = new CaseThirteen();
+    o.a();
+    o.b();
+    o.c();
+    o.d();
+    o.e();
+  }
+
+                     public void a() {}
+  @Anno(value=Level.NONE,c=Color.RED)  public void b() {}
+  @Anno(value=Level.ONE)   public void c() {}
+  @Anno(value=Level.TWO,c=Color.GREEN)   public void d() {}
+  @Anno(value=Level.THREE,c=Color.BLUE) public void e() {}
+
+}
+
+enum Level { NONE, ONE, TWO, THREE; }
+enum Color { RED, GREEN, BLUE; }
+
+@Retention(RetentionPolicy.RUNTIME)
+@interface Anno { Level value(); Color c() default Color.GREEN; }
+
+aspect X {
+ 
+  before(String l): execution(@Anno !@Anno(Level.NONE) * *(..)) && @annotation(Anno(l)) && @annotation(Anno(c)) {
+    System.out.println(l+""+c);
+  }
+}
+
@@ -57,6 +57,9 @@ public class OptimizedAnnotationFieldBinding extends XMLBasedAjcTestCase {
     public void testCaseTwelve_BindingAnnoAndAnnoValue() {
         runTest("case twelve - binding anno and anno value");
     }
+    public void testCaseThirteen_bugNPE() {
+        runTest("case thirteen - bug npe");
+    }
 
 	/////////////////////////////////////////
 	public static Test suite() {
@@ -115,4 +115,14 @@
      </run>
    </ajc-test>
 
+   
+   <ajc-test dir="features161/optimizedAnnotationBinding" title="case thirteen - bug npe">
+     <compile options="-1.5" files="CaseThirteen.java">
+       <message kind="error" line="31" text="The field within the annotation must be an Enum"/>
+       <message kind="error" line="31" text="No field of type 'java.lang.String'"/>
+       <message kind="error" line="31" text="When using @annotation"/>
+       <message kind="error" line="32" text="cannot be resolved"/>
+     </compile>
+   </ajc-test>
+   
 </suite>
\ No newline at end of file
