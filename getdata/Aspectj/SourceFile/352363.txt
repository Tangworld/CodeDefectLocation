@@ -1343,11 +1343,7 @@ public class PatternParser {
 			tokenSource.next();
 			dotOK = true;
 		}
-		if (buf.length() == 0) {
-			return null;
-		} else {
-			return buf.toString();
-		}
+		return buf.toString();
 	}
 
 	public NamePattern parseNamePattern() {
@@ -0,0 +1,25 @@
+import java.lang.annotation.*;
+
+public class Code {
+
+  @Anno
+  int i=0;
+
+  @Anno(name="foobar")
+  int j=0;
+
+  public void m() {
+    i = i+1;
+    j = j+1;
+  }
+}
+
+@Retention(RetentionPolicy.RUNTIME)
+@interface Anno {
+  String name() default "";
+}
+
+aspect X {
+  declare warning: get(@Anno(name="") * *) : "name is empty1";
+  declare warning: get(@Anno(name="foobar") * *) : "name is empty2";
+}
@@ -25,6 +25,10 @@ public class Ajc1612Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 	// runTest("anno copying");
 	// }
 
+	public void testEmptyPattern_pr352363() {
+		runTest("empty pattern");
+	}
+
 	public void testGenericsIssue_pr351592() {
 		runTest("generics issue");
 	}
@@ -2,6 +2,13 @@
 
 <suite>
 
+<ajc-test dir="bugs1612/pr352363" title="empty pattern">
+<compile files="Code.java" options="-1.5">
+  <message line="12" kind="warning" text="name is empty1"/>
+  <message line="13" kind="warning" text="name is empty2"/>
+</compile>
+</ajc-test>
+
 <ajc-test dir="bugs1612/pr351592" title="generics issue">
 <compile files="Test.java Fib.java FibCaching.aj Caching.aj" options="-1.5"/>
 <run class="caching.Test"/>
