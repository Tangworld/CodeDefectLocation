@@ -0,0 +1,18 @@
+import org.aspectj.weaver.WeakClassLoaderReference;
+
+
+public class Code {
+
+	/**
+	 * @param args
+	 */
+	public static void main(String[] args) {
+		try{
+			WeakClassLoaderReference wclref = new WeakClassLoaderReference(null);
+			System.out.println("OK");
+		}catch(Throwable npe){
+			System.out.println("KO");
+		}
+	}
+
+}
\ No newline at end of file
@@ -18,6 +18,11 @@ import org.aspectj.testing.XMLBasedAjcTestCase;
 
 public class Ajc1610Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
+	
+	public void testNPE_pr363962() {
+		runTest("pr363962");
+	}
+	
 	public void testOffset0_bug324932() {
 		runTest("pr324932");
 	}
@@ -2,6 +2,17 @@
 
 <suite>
 
+
+  <ajc-test dir="bugs1610/pr363962" title="pr363962">
+    <compile files="Code.java" options="-1.5"/>
+    <run class="Code">
+    <stdout>
+	    <line text="OK"/>
+    </stdout>
+    </run>
+  </ajc-test>
+  
+  
   <ajc-test dir="bugs1610/pr324932" title="pr324932">
     <compile files="A.java" options="-1.5"/>
     <compile files="X.aj" options="-1.5 -Xlint:ignore" />
@@ -30,9 +30,9 @@ import java.lang.ref.WeakReference;
  * be using this weaver if its associated ClassLoader has been collected. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=210470
  * 
  * 
- * @author Andy Clement
+ * @author Andy Clement, Abraham Nevado
  */
-public class WeakClassLoaderReference {
+public class WeakClassLoaderReference{
 
 	protected final int hashcode;
 
@@ -40,7 +40,13 @@ public class WeakClassLoaderReference {
 
 	public WeakClassLoaderReference(ClassLoader loader) {
 		loaderRef = new WeakReference(loader);
-		hashcode = loader.hashCode() * 37;
+		if(loader == null){
+			// Bug: 363962 
+			// Check that ClassLoader is not null, for instance when loaded from BootStrapClassLoader
+			hashcode = System.identityHashCode(this);
+		}else{
+			hashcode = loader.hashCode() * 37;
+		}
 	}
 
 	public ClassLoader getClassLoader() {
