@@ -0,0 +1,18 @@
+public class Foo {
+
+  public static void main(String[]argv) {
+    new Foo().m();
+  }
+
+  public void m() {
+    int j = new Bar().i;
+  }
+
+  private class Bar {
+    private int i;
+  }
+}
+
+aspect X {
+  before(): execution( !synthetic * *(..)) {}
+}
@@ -21,6 +21,10 @@ import org.aspectj.testing.XMLBasedAjcTestCase;
  */
 public class Ajc1612Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
+	public void testSyntheticMethods_327867() {
+		runTest("synthetic methods");
+	}
+
 	// public void testSignedJarLtw_328099() {
 	// runTest("signed jar ltw");
 	// }
@@ -2,6 +2,15 @@
 
 <suite>
 
+<ajc-test dir="bugs1612/pr327867" title="synthetic methods">
+<compile files="Foo.java" options="-1.5 -showWeaveInfo">
+<message kind="weave" text="Join point 'method-execution(void Foo.main(java.lang.String[]))' in Type 'Foo' (Foo.java:3) advised by before advice from 'X' (Foo.java:17)"/>
+<message kind="weave" text="Join point 'method-execution(void Foo.m())' in Type 'Foo' (Foo.java:7) advised by before advice from 'X' (Foo.java:17)"/>
+</compile>
+<run class="Foo"/>
+</ajc-test>
+
+
 <ajc-test dir="bugs1612/pr328099" title="signed jar ltw">
 <compile files="X.java" classpath="code.jar"/>
 <run class="foo.bar.FooLaunch" ltw="aop.xml" classpath="$sandbox/code.jar">
@@ -36,6 +36,7 @@ public class ModifiersPattern extends PatternNode {
 			modifierFlags.put(flagName, new Integer(flag));
 			flag = flag << 1;
 		}
+		modifierFlags.put("synthetic", new Integer(0x1000 /* Modifier.SYNTHETIC */));
 	}
 
 	public ModifiersPattern(int requiredModifiers, int forbiddenModifiers) {
