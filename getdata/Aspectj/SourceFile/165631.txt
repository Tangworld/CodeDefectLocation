@@ -0,0 +1,13 @@
+interface A<T> {}
+
+interface B<T> extends A<T> {}
+
+class C implements A<String> {
+}
+
+class D extends C {
+}
+
+aspect X {
+  declare parents: D implements B<Number>;
+}
@@ -0,0 +1,15 @@
+interface A<T> {}
+
+interface B<T> extends A<T> {}
+
+class C implements A<String> {}
+
+interface A1 {}
+
+class D extends C implements A1 {
+}
+
+aspect X {
+        declare parents: D implements B<Number>;
+}
+
@@ -23,6 +23,7 @@ public class Ajc160Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
   public void testGenericFieldNPE_pr165885() { runTest("generic field npe");}
   public void testIncorrectOptimizationOfIstore_pr166084() { runTest("incorrect optimization of istore"); }
+  public void testDualParameterizationsNotAllowed_pr165631() { runTest("dual parameterizations not allowed"); }
 
   /////////////////////////////////////////
   public static Test suite() {
@@ -14,6 +14,16 @@
       <compile files="X.java" inpath="simple.jar"/>
 	  <run class="Simple"/>
     </ajc-test>
+       
+    <ajc-test dir="bugs160/pr165631" title="dual parameterizations not allowed">
+      <!-- two variations of the same situation, should fail in the same way -->
+      <compile files="Bug.java" options="-1.5">
+        <message kind="error" line="12" text="Cannot declare parent B"/>
+      </compile>
+      <compile files="Bug2.java" options="-1.5">
+        <message kind="error" line="13" text="Cannot declare parent B"/>
+      </compile>
+    </ajc-test>
 
 
  <!-- second section - need a 1.6 vm -->
@@ -326,7 +326,9 @@ public class DeclareParents extends Declare {
 					return false;
 				}
 			}
-			return verifyNoInheritedAlternateParameterization(supertype,newParent,world);
+			if (!verifyNoInheritedAlternateParameterization(supertype,newParent,world)) {
+				return false;
+			}
 		}
 		return true;
 	}
