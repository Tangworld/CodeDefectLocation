@@ -29,6 +29,7 @@ import org.aspectj.org.eclipse.jdt.internal.compiler.ast.ThisReference;
 import org.aspectj.org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BlockScope;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.MethodBinding;
+import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;
 
@@ -99,8 +100,12 @@ public class SuperFixerVisitor extends ASTVisitor {
 			targetClass);
 
 		AstUtil.replaceMethodBinding(call, superAccessBinding);
-	
-		ResolvedMember targetMember = factory.makeResolvedMember(superBinding);
+		ResolvedMember targetMember = null;
+		if (superBinding.declaringClass.isParameterizedType()) { //pr206911
+			targetMember = factory.makeResolvedMember(superBinding,((ParameterizedTypeBinding)superBinding.declaringClass).genericType());
+		} else {
+			targetMember = factory.makeResolvedMember(superBinding);
+		}
 		superMethodsCalled.add(targetMember);
 	}
 }
@@ -0,0 +1,15 @@
+package bugs;
+
+class GenericClass< K > {
+          public void f() {}
+}
+class ExtendsGenericHasITD extends GenericClass< Object > {}
+
+public aspect VerifyError {
+          public void ExtendsGenericHasITD.f() {
+                   super.f();
+          }
+          public static void main( String[] args ) {
+                   new ExtendsGenericHasITD();
+          }
+}
@@ -0,0 +1,15 @@
+package bugs;
+
+class GenericClass<K> {
+          public void f(K t) {}
+}
+class ExtendsGenericHasITD extends GenericClass<String> {}
+
+public aspect VerifyError2 {
+          public void ExtendsGenericHasITD.f(String s) {
+                   super.f(s);
+          }
+          public static void main( String[] args ) {
+                   new ExtendsGenericHasITD();
+          }
+}
@@ -1,6 +1,6 @@
 <!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>
 
-<!-- AspectJ v1.6.0 Tests -->
+<!-- AspectJ v1.5.4Tests -->
 <suite>
 
    <ajc-test dir="bugs154/pr166647" title="ltw and cflow problem">
@@ -0,0 +1,35 @@
+/*******************************************************************************
+ * Copyright (c) 2006 IBM 
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *    Andy Clement - initial API and implementation
+ *******************************************************************************/
+package org.aspectj.systemtest.ajc160;
+
+import java.io.File;
+
+import org.aspectj.testing.XMLBasedAjcTestCase;
+import junit.framework.Test;
+
+/**
+ * These are tests for AspectJ1.6.0
+ */
+public class Ajc160Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
+	
+	public void testGenericsSuperITD_pr206911() { runTest("generics super itd"); }
+	public void testGenericsSuperITD_pr206911_2() { runTest("generics super itd - 2"); }
+
+  /////////////////////////////////////////
+  public static Test suite() {
+    return XMLBasedAjcTestCase.loadSuite(Ajc160Tests.class);
+  }
+
+  protected File getSpecFile() {
+    return new File("../tests/src/org/aspectj/systemtest/ajc160/ajc160.xml");
+  }
+  
+}
\ No newline at end of file
@@ -21,6 +21,7 @@ public class AllTestsAspectJ160 {
 		//$JUnit-BEGIN$
 		suite.addTest(SanityTests.suite());
 		suite.addTest(NewFeatures.suite());
+		suite.addTest(Ajc160Tests.suite());
         //$JUnit-END$
 		return suite;
 	}
@@ -0,0 +1,16 @@
+<!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>
+
+<!-- AspectJ v1.6.0 Tests -->
+<suite>
+
+   <ajc-test dir="bugs160/pr206911" title="generics super itd">
+     <compile options="-1.5" files="VerifyError.java"/>
+     <run class="bugs.VerifyError"/>
+   </ajc-test>
+
+   <ajc-test dir="bugs160/pr206911" title="generics super itd - 2">
+     <compile options="-1.5" files="VerifyError2.java"/>
+     <run class="bugs.VerifyError2"/>
+   </ajc-test>
+   
+</suite>
\ No newline at end of file
