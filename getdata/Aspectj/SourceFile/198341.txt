@@ -0,0 +1,30 @@
+import java.lang.annotation.*;
+
+@Retention(RetentionPolicy.RUNTIME)
+@Target(ElementType.TYPE)
+@interface TestAnnotation1 {}
+
+@Retention(RetentionPolicy.RUNTIME)
+@Target(ElementType.TYPE)
+@interface TestAnnotation2{}
+
+@TestAnnotation1
+class Annotated {}
+
+interface Marker {}
+
+public aspect AnnotationAspect {
+
+  declare @type: @TestAnnotation1 *: @TestAnnotation2;
+
+  // of cource this matches
+  // declare parents: (@TestAnnotation1 *)  implements Marker;
+  // this matches, too
+  // declare parents: (@TestAnnotation2 *)  implements Marker;
+
+  // this does not match on Annotated
+  declare parents: (@TestAnnotation2 *) && !java.lang.annotation.Annotation implements Marker;
+  // but this does match on annotated
+  // declare parents: (@TestAnnotation1 *) && !java.lang.annotation.Annotation implements Marker;
+}
+
@@ -19,6 +19,7 @@ import org.aspectj.testing.XMLBasedAjcTestCase;
 public class Ajc162Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
 	// AspectJ1.6.2	
+	public void testDecAtAnnoDecP_pr198341() { runTest("dec atanno and decp"); }
 //	public void testStarInAnnoStyle_pr209951() { runTest("asterisk in at aj pointcut"); }
 	public void testMissingMarkers_pr197720() { runTest("missing markers on inherited annotated method"); }
 	public void testLostGenericsSigOnItd_pr211146() { runTest("lost generic sig on itd"); }
@@ -3,6 +3,13 @@
 <!-- AspectJ v1.6.2 Tests -->
 <suite>
 
+   <ajc-test dir="bugs162/pr198341" title="dec atanno and decp">
+     <compile options="-1.5 -showWeaveInfo" files="AnnotationAspect.java">
+     	<message kind="weave" text="'Annotated' (AnnotationAspect.java:12) is annotated with @TestAnnotation2 type annotation from 'AnnotationAspect' (AnnotationAspect.java:18)"/>
+     	<message kind="weave" text="Extending interface set for type 'Annotated' (AnnotationAspect.java) to include 'Marker' (AnnotationAspect.java)"/>
+     </compile>
+   </ajc-test>
+
 
    <ajc-test dir="bugs162/pr209051" title="asterisk in at aj pointcut">
      <compile options="-1.5" files="Bug.java"/>
@@ -147,6 +147,10 @@ public class AndTypePattern extends TypePattern {
 		AndTypePattern atp = (AndTypePattern) obj;
 		return left.equals(atp.left) && right.equals(atp.right);
 	}
+
+	public boolean isStarAnnotation() {
+		return left.isStarAnnotation() && right.isStarAnnotation();
+	}
 
 	/* (non-Javadoc)
 	 * @see java.lang.Object#hashCode()
@@ -146,6 +146,10 @@ public class OrTypePattern extends TypePattern {
 		}
 		return buff.toString();
 	}
+
+	public boolean isStarAnnotation() {
+		return left.isStarAnnotation() || right.isStarAnnotation();
+	}
 
 	/* (non-Javadoc)
 	 * @see java.lang.Object#equals(java.lang.Object)
