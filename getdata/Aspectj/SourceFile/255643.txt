@@ -3,9 +3,10 @@ package javax.foo;
 public class A {
   public static void main(String []argv) throws Exception {
     new A().foo();
+    new B().foo();
   }
 
   public void foo() {
-	  System.out.println("Method running");
+	  System.out.println("(A) method running");
   }
 }
@@ -0,0 +1,8 @@
+package javax.foo;
+
+public class B {
+
+  public void foo() {
+	  System.out.println("(B) method running");
+  }
+}
@@ -4,22 +4,32 @@
 <suite>
 
     <ajc-test dir="features160/weavingJavaxPackage" title="weave javax classes - no">
-      <compile files="A.java" />
+      <compile files="A.java B.java" />
       <compile files="X.aj" outjar="code.jar"/>
       <run class="javax.foo.A" classpath="code.jar" ltw="aop1.xml">
+      <stderr>
+      <line text="AspectJ Weaver Version"/>
+      <line text="register classloader"/>
+      <line text="using configuration"/>
+      <line text="register aspect X"/>
+      <line text="not being woven"/>
+      </stderr>
         <stdout>
-           <line text="Method running"/>
+           <line text="(A) method running"/>
+           <line text="(B) method running"/>
         </stdout>
       </run>
     </ajc-test>
 
     <ajc-test dir="features160/weavingJavaxPackage" title="weave javax classes - yes">
-      <compile files="A.java" />
+      <compile files="A.java B.java" />
       <compile files="X.aj" outjar="code.jar"/>
       <run class="javax.foo.A" classpath="code.jar" ltw="aop2.xml">
         <stdout>
            <line text="advised"/>
-           <line text="Method running"/>
+           <line text="(A) method running"/>
+           <line text="advised"/>
+           <line text="(B) method running"/>
         </stdout>
       </run>
     </ajc-test>
@@ -87,6 +87,8 @@ public class WeavingAdaptor implements IMessageContext {
 	protected BcelObjectType delegateForCurrentClass; // lazily initialized, should be used to prevent parsing bytecode multiple
 	// times
 
+	private boolean haveWarnedOnJavax = false;
+
 	private int weavingSpecialTypes = 0;
 	private static final int INITIALIZED = 0x1;
 	private static final int WEAVE_JAVA_PACKAGE = 0x2;
@@ -339,12 +341,36 @@ public class WeavingAdaptor implements IMessageContext {
 				}
 			}
 		}
-		boolean should = !(name.startsWith("org.aspectj.")
-				|| (name.startsWith("java.") && (weavingSpecialTypes & WEAVE_JAVA_PACKAGE) == 0)
-				|| (name.startsWith("javax.") && (weavingSpecialTypes & WEAVE_JAVAX_PACKAGE) == 0)
-		// || name.startsWith("$Proxy")//JDK proxies//FIXME AV is that 1.3 proxy ? fe. ataspect.$Proxy0 is a java5 proxy...
-		|| name.startsWith("sun.reflect."));// JDK reflect
-		return should;
+		if (name.startsWith("org.aspectj.")) {
+			return false;
+		}
+		if (name.startsWith("sun.reflect.")) {// JDK reflect
+			return false;
+		}
+		if (name.startsWith("javax.")) {
+			if ((weavingSpecialTypes & WEAVE_JAVAX_PACKAGE) != 0) {
+				return true;
+			} else {
+				if (!haveWarnedOnJavax) {
+					haveWarnedOnJavax = true;
+					warn("javax.* types are not being woven because the weaver option '-Xset:weaveJavaxPackages=true' has not been specified");
+				}
+				return false;
+			}
+		}
+		if (name.startsWith("java.")) {
+			if ((weavingSpecialTypes & WEAVE_JAVA_PACKAGE) != 0) {
+				return true;
+			} else {
+				return false;
+			}
+		}
+		// boolean should = !(name.startsWith("org.aspectj.")
+		// || (name.startsWith("java.") && (weavingSpecialTypes & WEAVE_JAVA_PACKAGE) == 0)
+		// || (name.startsWith("javax.") && (weavingSpecialTypes & WEAVE_JAVAX_PACKAGE) == 0)
+		// // || name.startsWith("$Proxy")//JDK proxies//FIXME AV is that 1.3 proxy ? fe. ataspect.$Proxy0 is a java5 proxy...
+		// || name.startsWith("sun.reflect."));
+		return true;
 	}
 
 	/**
