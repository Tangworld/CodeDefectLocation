@@ -1882,6 +1882,15 @@ public abstract class ResolvedType extends UnresolvedType implements AnnotatedEl
 				if (!isVisible(existing.getModifiers(),
 					existing.getDeclaringType().resolve(getWorld()),
 					this)) {
+					// if they intended to override it but it is not visible, give them a nicer message
+					if (existing.isAbstract() && conflictingSignature(existing,toAdd)) {
+						getWorld().showMessage(
+								IMessage.ERROR,
+								WeaverMessages.format(WeaverMessages.POINTCUT_NOT_VISIBLE,
+										existing.getDeclaringType().getName() + "." + existing.getName()+"()", this.getName()),
+								toAdd.getSourceLocation(),null);
+						j.remove();
+					}
 					continue;
 				}
 				if (conflictingSignature(existing, toAdd)) {
@@ -24,6 +24,7 @@ public class WeaverMessages {
 	public static final String THIS_OR_TARGET_IN_DECLARE = "thisOrTargetInDeclare";
 	public static final String ABSTRACT_POINTCUT = "abstractPointcut";
 	public static final String POINCUT_NOT_CONCRETE = "abstractPointcutNotMadeConcrete";
+	public static final String POINTCUT_NOT_VISIBLE = "pointcutNotVisible";
 	public static final String CONFLICTING_INHERITED_POINTCUTS = "conflictingInheritedPointcuts";
 	public static final String CIRCULAR_POINTCUT = "circularPointcutDeclaration";
 	public static final String CANT_FIND_POINTCUT = "cantFindPointcut";
@@ -23,6 +23,7 @@ conflictingInheritedPointcuts=conflicting inherited pointcuts in {0}
 circularPointcutDeclaration=circular pointcut declaration involving: {0}
 cantFindPointcut=can''t find pointcut ''{0}'' on {1}
 exactTypePatternRequired=exact type pattern required
+pointcutNotVisible=pointcut ''{0}'' is not visible from type ''{1}'' - cannot override
 cantBindType=can''t bind type name ''{0}''
 wildcardTypePatternNotAllowed=wildcard type pattern not allowed, must use type name
 fieldCantBeVoid=fields cannot have a void type
@@ -0,0 +1,7 @@
+package foo;
+
+public class Foo {
+       public static void main (String[] args) {
+               System.out.println("foo!");
+       }
+}
@@ -0,0 +1,14 @@
+package bar;
+
+public abstract aspect PrintAround {
+
+       abstract pointcut method();
+
+       Object around(): method() {
+               System.out.println("-before-");
+               Object r = proceed();
+               System.out.println("-after-");
+               return r;
+       }
+
+}
@@ -0,0 +1,9 @@
+package foo;
+
+import bar.PrintAround;
+
+public aspect PrintAroundFoo extends PrintAround {
+
+       pointcut method() : call (void Main(String[]));
+
+}
@@ -1393,9 +1393,8 @@
       keywords="from-resolved_10x"
        comment="XXX getting error - confirm line numbers">
         <compile files="parent/ParentCE.java,child/ChildCE.java">
+            <message kind="error" file="child/ChildCE.java" line="32" text="pointcut 'parent.ParentCE.define()' is not visible"/>
             <message kind="error" file="child/ChildCE.java" line="21"/>
-            <message kind="error" file="child/ChildCE.java" line="31"/>
-            <message kind="error" file="parent/ParentCE.java" line="8"/>
             <message kind="error" file="parent/ParentCE.java" line="10"/>
             <message kind="error" file="parent/ParentCE.java" line="12"/>
             <message kind="error" file="parent/ParentCE.java" line="22"/>
@@ -19,6 +19,7 @@ import org.aspectj.testing.XMLBasedAjcTestCase;
 public class Ajc162Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
 	// AspectJ1.6.2	
+	public void testPublicPointcut_pr239539() { runTest("public pointcut"); }
 	public void testGenericDecp_pr241047() { runTest("generic decp"); }
 	public void testGenericDecp_pr241047_2() { runTest("generic decp - 2"); }
 	public void testGenericItds_pr242797_1() { runTest("generic itds - 1"); }
@@ -37,6 +37,12 @@
         </run>
     </ajc-test> 
 
+    <ajc-test dir="bugs162/pr239539" title="public pointcut">
+        <compile files="PrintAround.java PrintAroundFoo.java Foo.java" options="-1.5">
+	        <message kind="error" line="7" text="pointcut 'bar.PrintAround.method()' is not visible from type "/>
+        </compile>
+    </ajc-test> 
+
     <ajc-test dir="bugs162/pr242797/case1" title="generic itds - 1">
         <compile files="ClassUtils.java CMEFinder.java Finder.java H2Deployment.java Localized.java LocalizedFinder.java OnetElement.java OnetFinder.java Partitioned.java PartitionedFinder.java" options="-1.5">
         </compile>
