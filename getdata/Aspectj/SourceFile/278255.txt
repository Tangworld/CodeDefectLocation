@@ -383,6 +383,10 @@ public interface IProgramElement extends Serializable {
 			return name.startsWith("declare @");
 		}
 
+		public boolean isDeclareParents() {
+			return name.startsWith("declare parents");
+		}
+
 		// The 4 declarations below are necessary for serialization
 		private static int nextOrdinal = 0;
 		private final int ordinal = nextOrdinal++;
@@ -397,5 +401,6 @@ public interface IProgramElement extends Serializable {
 	}
 
 	public void setAnnotationStyleDeclaration(boolean b);
+
 	public boolean isAnnotationStyleDeclaration();
 }
\ No newline at end of file
@@ -158,7 +158,34 @@ public class JDTLikeHandleProvider implements IElementHandleProvider {
 		// TODO could optimize this code
 		char[] byteCodeName = ipe.getBytecodeName().toCharArray();
 
-		if (ipe.getKind().isDeclare()) {
+		if (ipe.getKind().isDeclareAnnotation()) {
+			// look at peer declares
+			int count = 1;
+			List kids = ipe.getParent().getChildren();
+			int idx = 0;
+			for (Iterator iterator = kids.iterator(); iterator.hasNext();) {
+				IProgramElement object = (IProgramElement) iterator.next();
+				if (object.equals(ipe)) {
+					break;
+				}
+				if (object.getKind() == ipe.getKind()) {
+					if (object.getKind().toString().equals(ipe.getKind().toString())) {
+						String existingHandle = object.getHandleIdentifier();
+						int suffixPosition = existingHandle.indexOf('!');
+						if (suffixPosition != -1) {
+							count = new Integer(existingHandle.substring(suffixPosition + 1)).intValue() + 1;
+						} else {
+							if (count == 1) {
+								count = 2;
+							}
+						}
+					}
+				}
+			}
+			if (count > 1) {
+				return CharOperation.concat(countDelim, new Integer(count).toString().toCharArray());
+			}
+		} else if (ipe.getKind().isDeclare()) {
 			int index = CharOperation.lastIndexOf('_', byteCodeName);
 			if (index != -1) {
 				return convertCount(CharOperation.subarray(byteCodeName, index + 1, byteCodeName.length));
@@ -184,23 +211,22 @@ public class JDTLikeHandleProvider implements IElementHandleProvider {
 						if (sig1 != null && (idx = sig1.indexOf(")")) != -1) {
 							sig1 = sig1.substring(0, idx);
 						}
-						// this code needs a speed overhaul...  and some proper tests
+						// this code needs a speed overhaul... and some proper tests
 						// Two static parts because one may be enclosing jpsp (269522)
-						if (sig1!=null) {
-							if (sig1.indexOf("Lorg/aspectj/lang")!=-1) {
+						if (sig1 != null) {
+							if (sig1.indexOf("Lorg/aspectj/lang") != -1) {
 								if (sig1.endsWith("Lorg/aspectj/lang/JoinPoint$StaticPart;")) {
-									sig1 = sig1.substring(0,sig1.lastIndexOf("Lorg/aspectj/lang/JoinPoint$StaticPart;"));
+									sig1 = sig1.substring(0, sig1.lastIndexOf("Lorg/aspectj/lang/JoinPoint$StaticPart;"));
 								}
 								if (sig1.endsWith("Lorg/aspectj/lang/JoinPoint;")) {
-									sig1 = sig1.substring(0,sig1.lastIndexOf("Lorg/aspectj/lang/JoinPoint;"));
+									sig1 = sig1.substring(0, sig1.lastIndexOf("Lorg/aspectj/lang/JoinPoint;"));
 								}
 								if (sig1.endsWith("Lorg/aspectj/lang/JoinPoint$StaticPart;")) {
-									sig1 = sig1.substring(0,sig1.lastIndexOf("Lorg/aspectj/lang/JoinPoint$StaticPart;"));
+									sig1 = sig1.substring(0, sig1.lastIndexOf("Lorg/aspectj/lang/JoinPoint$StaticPart;"));
 								}
 							}
 						}
-						
-						
+
 						if (sig1 == null && ipeSig == null || (sig1 != null && sig1.equals(ipeSig))) {
 							String existingHandle = object.getHandleIdentifier();
 							int suffixPosition = existingHandle.indexOf('!');
@@ -299,8 +299,9 @@ public class ProgramElement implements IProgramElement {
 
 	public String getBytecodeName() {
 		String s = (String) kvpairs.get("bytecodeName");
-		if (s == null)
+		if (s == null) {
 			return UNDEFINED;
+		}
 		return s;
 	}
 
@@ -648,10 +649,10 @@ public class ProgramElement implements IProgramElement {
 	}
 
 	public boolean isAnnotationStyleDeclaration() {
-		return kvpairs.get("annotationStyleDeclaration")!=null;
+		return kvpairs.get("annotationStyleDeclaration") != null;
 	}
 
-	public void setAnnotationStyleDeclaration(boolean b) {		
+	public void setAnnotationStyleDeclaration(boolean b) {
 		if (b) {
 			if (kvpairs == Collections.EMPTY_MAP) {
 				kvpairs = new HashMap();
@@ -0,0 +1,15 @@
+import java.lang.annotation.*;
+
+public class A {
+}
+
+aspect X {
+  declare @type: A: @Foo;
+  declare parents: A implements java.io.Serializable;
+//  declare @type: A: @Foo;
+//  declare @type: A: @Foo;
+  declare parents: A implements java.io.Serializable;
+}
+
+@Retention(RetentionPolicy.RUNTIME)
+@interface Foo {}
@@ -12,10 +12,10 @@
       Secured  [annotation] TEST_SANDBOX\pr132130.aj:15:
 === END OF MODEL REPORT =========
 === RELATIONSHIPS REPORT ========= After a batch build
-(targets=1) <*pr132130.aj[BankAccount~BankAccount~QString;~I (annotated by) <*pr132130.aj}basic`declare \@constructor!2
-(targets=1) <*pr132130.aj}basic`declare \@method (annotates) <*pr132130.aj[BankAccount~debit~J~J
-(targets=1) <*pr132130.aj}basic`declare \@constructor!2 (annotates) <*pr132130.aj[BankAccount~BankAccount~QString;~I
+(targets=1) <*pr132130.aj}basic`declare \@constructor (annotates) <*pr132130.aj[BankAccount~BankAccount~QString;~I
 (targets=1) <*pr132130.aj[BankAccount~debit~J~J (annotated by) <*pr132130.aj}basic`declare \@method
+(targets=1) <*pr132130.aj}basic`declare \@method (annotates) <*pr132130.aj[BankAccount~debit~J~J
+(targets=1) <*pr132130.aj[BankAccount~BankAccount~QString;~I (annotated by) <*pr132130.aj}basic`declare \@constructor
 === END OF RELATIONSHIPS REPORT ==
 === Properties of the model and relationships map =====
 method=1
@@ -23,9 +23,9 @@
       NewClass  [class] TEST_SANDBOX\NewClass.java:3:
 === END OF MODEL REPORT =========
 === RELATIONSHIPS REPORT ========= After a batch build
-(targets=1) {MyFoo.java (annotated by) <bar*MyBar.aj}MyBar`declare \@type!3
+(targets=1) {MyFoo.java (annotated by) <bar*MyBar.aj}MyBar`declare \@type
 (targets=1) <bar*MyBar.aj}MyBar`declare parents!2 (declared on) /,<foo(MyFoo.class[MyFoo
-(targets=1) <bar*MyBar.aj}MyBar`declare \@type!3 (annotates) {MyFoo.java
+(targets=1) <bar*MyBar.aj}MyBar`declare \@type (annotates) {MyFoo.java
 (targets=1) /,<foo(MyFoo.class[MyFoo (aspect declarations) <bar*MyBar.aj}MyBar`declare parents!2
 === END OF RELATIONSHIPS REPORT ==
 === Properties of the model and relationships map =====
