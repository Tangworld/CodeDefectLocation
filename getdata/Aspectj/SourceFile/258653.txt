@@ -433,14 +433,18 @@ public class AsmRelationshipProvider {
 		if (shadow instanceof BcelShadow) {
 			Member actualEnclosingMember = ((BcelShadow) shadow).getRealEnclosingCodeSignature();
 
-			UnresolvedType type = enclosingMember.getDeclaringType();
-			UnresolvedType actualType = actualEnclosingMember.getDeclaringType();
-
-			// if these are not the same, it is an ITD and we need to use the latter to lookup
-			if (type.equals(actualType)) {
+			if (actualEnclosingMember == null) {
 				enclosingNode = lookupMember(model.getHierarchy(), shadow.getEnclosingType(), enclosingMember);
 			} else {
-				enclosingNode = lookupMember(model.getHierarchy(), shadow.getEnclosingType(), actualEnclosingMember);
+				UnresolvedType type = enclosingMember.getDeclaringType();
+				UnresolvedType actualType = actualEnclosingMember.getDeclaringType();
+
+				// if these are not the same, it is an ITD and we need to use the latter to lookup
+				if (type.equals(actualType)) {
+					enclosingNode = lookupMember(model.getHierarchy(), shadow.getEnclosingType(), enclosingMember);
+				} else {
+					enclosingNode = lookupMember(model.getHierarchy(), shadow.getEnclosingType(), actualEnclosingMember);
+				}
 			}
 		} else {
 			enclosingNode = lookupMember(model.getHierarchy(), shadow.getEnclosingType(), enclosingMember);
@@ -0,0 +1,19 @@
+import org.aspectj.lang.annotation.After;
+import org.aspectj.lang.annotation.Aspect;
+
+@Aspect
+class staticinit {
+	@After("staticinitialization(MyType)")
+	public void print(){
+		System.out.println("INITIALIZED");		
+	}
+}
+
+//public
+class MyType {
+	public static void main(){
+		new MyType();
+	}
+}
+
+
@@ -27,9 +27,13 @@ import org.aspectj.testing.Utils;
 import org.aspectj.testing.XMLBasedAjcTestCase;
 
 public class Ajc163Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
-//	public void testGenericMethodBridging_pr251326() {
-//		runTest("itd anonymous inner class in wrong package");
-//	}
+	// public void testGenericMethodBridging_pr251326() {
+	// runTest("itd anonymous inner class in wrong package");
+	// }
+
+	public void testGetNode_pr258653() {
+		runTest("getNode");
+	}
 
 	public void testAtTargetPlus_pr255856() {
 		runTest("attarget with plus");
@@ -1,6 +1,10 @@
 <!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>
 
 <suite>
+    
+    <ajc-test dir="bugs163/pr258653" title="getNode">
+   	  <compile files="staticinit.java" options="-1.5 -emacssym"/>
+    </ajc-test>
 
     <ajc-test dir="bugs163/pr154427" title="getMethod returning null">
    	  <compile files="AuthorizationImpl.java Authorization.java AuthorizationAdmin.java CallAndMethodSignatureAspect.java CallTest.java" options=""/>
