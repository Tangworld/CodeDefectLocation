@@ -133,6 +133,7 @@ public class EclipseSourceType extends AbstractReferenceTypeDelegate {
 	}
 
 	public boolean isNested() {
+		if (declaration.binding!=null) return (declaration.binding.isMemberType());
 		return ((declaration.modifiers & ASTNode.IsMemberTypeMASK) != 0);
 	}
 
@@ -0,0 +1,35 @@
+
+package test;
+
+import java.beans.PropertyChangeListener;
+import java.beans.PropertyChangeSupport;
+import java.io.Serializable;
+import java.beans.PropertyChangeEvent;
+import java.beans.PropertyChangeListener;
+
+aspect BoundEntityAspect {
+
+        interface BoundBean extends Serializable {}
+
+        declare parents: Model || *ChangeL implements BoundBean;//test.* && !BoundEntityAspect implements BoundBean;
+
+        public synchronized PropertyChangeSupport BoundBean.getPropertyChangeSupport() {
+        	return null;
+        }
+
+}
+
+public class Model {
+
+        private PropertyChangeListener changeListener = new ChangeL();
+
+        protected class ChangeL implements PropertyChangeListener {
+                public void propertyChange(PropertyChangeEvent evt) {
+                        getPropertyChangeSupport();//.firePropertyChange("valid", null, null);
+                }
+        }
+
+        public static void main(String[] args) {
+                new Model().changeListener.propertyChange(null);
+        }
+}
@@ -33,6 +33,7 @@ public class Ajc153Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 //  public void testAnnotationStyleBcException_pr162135_3() { runTest("bcexception in annotation style around advice - 3");}
 //  public void testAnnotationStyleBcException_pr162135_4() { runTest("bcexception in annotation style around advice - 4");}
 //  public void testAnnotationStyleBcException_pr162135_5() { runTest("bcexception in annotation style around advice - 5");}
+  public void testIncompatibleClassChangeWithITD_pr164633() { runTest("incompatibleclasschange");}
   public void testComplexPointcut_pr162657() { runTest("complex pointcut");}
   public void testGenericsInPointcuts_pr161502() { runTest("generics in pointcuts");}
   public void testGenericsInPointcuts_pr161502_2() { runTest("generics in pointcuts - 2");}
@@ -24,6 +24,11 @@
       <compile files="TestAspect.aj"/>
     </ajc-test>
 
+    <ajc-test dir="bugs153/pr164633" title="incompatibleclasschange">
+      <compile files="Model.java"/>
+      <run class="test.Model"/>
+    </ajc-test>
+    
     <ajc-test dir="bugs153/pr162135" title="bcexception in annotation style around advice - 2">
       <compile files="Foo2.java" options="-1.5"/>
       <run class="Foo2"/>
