@@ -665,7 +665,7 @@ public class BuildArgParser extends Main {
             } else if (arg.equals("-source")) {
             	if (args.size() > nextArgIndex) {
             		String level = ((ConfigParser.Arg)args.get(nextArgIndex)).getValue();
-            		if (level.equals("1.5")){
+            		if (level.equals("1.5") || level.equals("5")) {
             			buildConfig.setBehaveInJava5Way(true);
             		}
             		unparsedArgs.add("-source");
@@ -0,0 +1,19 @@
+public abstract class A<E> {	
+    public A() { }
+    public void setUniqueID(Object o) {}
+}
+
+class B extends A {
+    public B() {}    
+}
+
+class D {
+    public void method() {
+        B b = new B();
+        b.setUniqueID(null);
+    }
+}
+
+aspect TestAspect {
+	before(): call(public void *.*()) { }    
+}
@@ -20,6 +20,8 @@ public class Ajc153Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
   // public void testArgnamesAndJavac_pr148381() { runTest("argNames and javac");}
 
+  public void testIllegalStateException_pr148737() { runTest("illegalstateexception for non generic type");}
+
   /////////////////////////////////////////
   public static Test suite() {
     return XMLBasedAjcTestCase.loadSuite(Ajc153Tests.class);
@@ -14,4 +14,10 @@
       </run>
     </ajc-test>
 
+    <ajc-test dir="bugs153/pr148737" title="illegalstateexception for non generic type">
+      <compile files="A.java" options="-source 5 -target 5">
+        <message kind="warning" line="18" text="advice defined in TestAspect has not been applied"/>
+      </compile>
+    </ajc-test>
+    
 </suite>
\ No newline at end of file
@@ -665,7 +665,7 @@ public class BuildArgParser extends Main {
             } else if (arg.equals("-source")) {
             	if (args.size() > nextArgIndex) {
             		String level = ((ConfigParser.Arg)args.get(nextArgIndex)).getValue();
-            		if (level.equals("1.5")){
+            		if (level.equals("1.5") || level.equals("5")) {
             			buildConfig.setBehaveInJava5Way(true);
             		}
             		unparsedArgs.add("-source");
@@ -0,0 +1,19 @@
+public abstract class A<E> {	
+    public A() { }
+    public void setUniqueID(Object o) {}
+}
+
+class B extends A {
+    public B() {}    
+}
+
+class D {
+    public void method() {
+        B b = new B();
+        b.setUniqueID(null);
+    }
+}
+
+aspect TestAspect {
+	before(): call(public void *.*()) { }    
+}
@@ -20,6 +20,8 @@ public class Ajc153Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 
   // public void testArgnamesAndJavac_pr148381() { runTest("argNames and javac");}
 
+  public void testIllegalStateException_pr148737() { runTest("illegalstateexception for non generic type");}
+
   /////////////////////////////////////////
   public static Test suite() {
     return XMLBasedAjcTestCase.loadSuite(Ajc153Tests.class);
@@ -14,4 +14,10 @@
       </run>
     </ajc-test>
 
+    <ajc-test dir="bugs153/pr148737" title="illegalstateexception for non generic type">
+      <compile files="A.java" options="-source 5 -target 5">
+        <message kind="warning" line="18" text="advice defined in TestAspect has not been applied"/>
+      </compile>
+    </ajc-test>
+    
 </suite>
\ No newline at end of file
