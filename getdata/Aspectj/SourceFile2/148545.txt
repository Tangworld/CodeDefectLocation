@@ -0,0 +1,21 @@
+import java.util.Arrays;
+
+privileged public aspect MyAspect2 {
+
+        Object around(MyClass o, MyAnnotation a) :
+                        execution(@MyAnnotation * *(..)) &&
+                        target(o) &&
+                        @annotation(a) {
+                if (isOneOf(o.getValue(), a.value())==null)
+                        throw new IllegalStateException(
+                                        o.getValue() +
+                                        " is not one of " +
+                                        Arrays.toString(a.value()));
+                return proceed(o, a);
+        }
+
+        private static final <T> T isOneOf(T obj, T[] arr) {
+                for (T el : arr) if (obj == el) return obj;
+                return null;
+        }
+}
\ No newline at end of file
@@ -36,6 +36,7 @@ public class Ajc152Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 //  public void testAdviceNotWovenAspectPath_pr147841() { runTest("advice not woven on aspectpath");}
 //  public void testClassCastForInvalidAnnotationValue_pr148537() { runTest("classcast annotation value");}
   public void testPrivilegeGeneric_pr148545() { runTest("nosuchmethoderror for privileged aspect");}
+  public void testPrivilegeGeneric_pr148545_2() { runTest("nosuchmethoderror for privileged aspect - 2");}
   public void testUnknownAnnotationNPE() { runTest("NPE for unknown annotation");}
   public void testDuplicateBridgeMethods_pr147801_1() { runTest("duplicate bridge methods");}
   public void testPackageIgnoredForException_pr147701_1() { runTest("package for exception ignored");}
@@ -114,8 +114,15 @@
     </ajc-test>
 
 	<ajc-test dir="bugs152/pr148545" title="nosuchmethoderror for privileged aspect">
-     <compile files="MyClass.java,MyAspect.java,MyAnnotation.java,MyEnum.java" options="-1.5"/>
-     <run class="MyClass"/>
+      <compile files="MyClass.java,MyAspect.java,MyAnnotation.java,MyEnum.java" options="-1.5"/>
+      <run class="MyClass"/>
+    </ajc-test>
+    
+	<ajc-test dir="bugs152/pr148545" title="nosuchmethoderror for privileged aspect - 2">
+      <compile files="MyClass.java,MyAspect2.java,MyAnnotation.java,MyEnum.java" options="-1.5 -showWeaveInfo">
+        <message kind="weave" text="Join point 'method-execution(void MyClass.test())' in Type 'MyClass' (MyClass.java:8) advised by around advice from 'MyAspect2' (MyAspect2.java:5)"/>
+      </compile>
+      <run class="MyClass"/>
     </ajc-test>
 
 	<ajc-test dir="bugs152/pr145391" title="itd calling generic method - 2">
@@ -33,6 +33,7 @@ import org.aspectj.org.eclipse.jdt.internal.compiler.ast.ASTNode;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.FieldBinding;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.IPrivilegedHandler;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.MethodBinding;
+import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;
 
 
@@ -57,7 +58,13 @@ public class PrivilegedHandler implements IPrivilegedHandler {
 	public MethodBinding getPrivilegedAccessMethod(MethodBinding baseMethod, ASTNode location) {
 		if (baseMethod.alwaysNeedsAccessMethod()) return baseMethod;
 
-		ResolvedMember key = inAspect.factory.makeResolvedMember(baseMethod);
+		ResolvedMember key = null;
+		
+		if (baseMethod instanceof ParameterizedMethodBinding) {
+			key = inAspect.factory.makeResolvedMember(((ParameterizedMethodBinding)baseMethod).original());
+		} else {
+			key = inAspect.factory.makeResolvedMember(baseMethod);
+		}
 		if (accessors.containsKey(key)) return (MethodBinding)accessors.get(key);
 
 		MethodBinding ret;
@@ -0,0 +1,7 @@
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+@Retention(RetentionPolicy.RUNTIME)
+public @interface MyAnnotation {
+        MyEnum[] value();
+}
\ No newline at end of file
@@ -0,0 +1,21 @@
+import java.util.Arrays;
+
+privileged public aspect MyAspect {
+
+        Object around(MyClass o, MyAnnotation a) :
+                        execution(@MyAnnotation * *(..)) &&
+                        target(o) &&
+                        @annotation(a) {
+                if (!isOneOf(o.getValue(), a.value()))
+                        throw new IllegalStateException(
+                                        o.getValue() +
+                                        " is not one of " +
+                                        Arrays.toString(a.value()));
+                return proceed(o, a);
+        }
+
+        private static final <T> boolean isOneOf(T obj, T[] arr) {
+                for (T el : arr) if (obj == el) return true;
+                return false;
+        }
+}
\ No newline at end of file
@@ -0,0 +1,14 @@
+public class MyClass {
+
+        public MyEnum getValue() {
+                return MyEnum.ONE;
+        }
+
+        @MyAnnotation({ MyEnum.ONE, MyEnum.TWO })
+        public void test() {
+        }
+
+        public static void main(String[] args) {
+                new MyClass().test();
+        }
+}
\ No newline at end of file
@@ -0,0 +1,3 @@
+public enum MyEnum {
+        ONE, TWO, THREE, FOUR, FIVE
+}
\ No newline at end of file
@@ -112,6 +112,11 @@
 	<ajc-test dir="bugs152/pr148537" title="classcast annotation value">
      <compile files="MyClass.java,MyAspect.java" options="-1.5"/>
     </ajc-test>
+    
+	<ajc-test dir="bugs152/pr148545" title="nosuchmethoderror for privileged aspect">
+     <compile files="MyClass.java,MyAspect.java,MyAnnotation.java,MyEnum.java" options="-1.5"/>
+     <run class="MyClass"/>
+    </ajc-test>
 
 	<ajc-test dir="bugs152/pr145391" title="itd calling generic method - 2">
      <compile files="GenericType2.java" options="-1.5"/>
@@ -0,0 +1,21 @@
+import java.util.Arrays;
+
+privileged public aspect MyAspect2 {
+
+        Object around(MyClass o, MyAnnotation a) :
+                        execution(@MyAnnotation * *(..)) &&
+                        target(o) &&
+                        @annotation(a) {
+                if (isOneOf(o.getValue(), a.value())==null)
+                        throw new IllegalStateException(
+                                        o.getValue() +
+                                        " is not one of " +
+                                        Arrays.toString(a.value()));
+                return proceed(o, a);
+        }
+
+        private static final <T> T isOneOf(T obj, T[] arr) {
+                for (T el : arr) if (obj == el) return obj;
+                return null;
+        }
+}
\ No newline at end of file
@@ -36,6 +36,7 @@ public class Ajc152Tests extends org.aspectj.testing.XMLBasedAjcTestCase {
 //  public void testAdviceNotWovenAspectPath_pr147841() { runTest("advice not woven on aspectpath");}
 //  public void testClassCastForInvalidAnnotationValue_pr148537() { runTest("classcast annotation value");}
   public void testPrivilegeGeneric_pr148545() { runTest("nosuchmethoderror for privileged aspect");}
+  public void testPrivilegeGeneric_pr148545_2() { runTest("nosuchmethoderror for privileged aspect - 2");}
   public void testUnknownAnnotationNPE() { runTest("NPE for unknown annotation");}
   public void testDuplicateBridgeMethods_pr147801_1() { runTest("duplicate bridge methods");}
   public void testPackageIgnoredForException_pr147701_1() { runTest("package for exception ignored");}
@@ -114,8 +114,15 @@
     </ajc-test>
 
 	<ajc-test dir="bugs152/pr148545" title="nosuchmethoderror for privileged aspect">
-     <compile files="MyClass.java,MyAspect.java,MyAnnotation.java,MyEnum.java" options="-1.5"/>
-     <run class="MyClass"/>
+      <compile files="MyClass.java,MyAspect.java,MyAnnotation.java,MyEnum.java" options="-1.5"/>
+      <run class="MyClass"/>
+    </ajc-test>
+    
+	<ajc-test dir="bugs152/pr148545" title="nosuchmethoderror for privileged aspect - 2">
+      <compile files="MyClass.java,MyAspect2.java,MyAnnotation.java,MyEnum.java" options="-1.5 -showWeaveInfo">
+        <message kind="weave" text="Join point 'method-execution(void MyClass.test())' in Type 'MyClass' (MyClass.java:8) advised by around advice from 'MyAspect2' (MyAspect2.java:5)"/>
+      </compile>
+      <run class="MyClass"/>
     </ajc-test>
 
 	<ajc-test dir="bugs152/pr145391" title="itd calling generic method - 2">
@@ -33,6 +33,7 @@ import org.aspectj.org.eclipse.jdt.internal.compiler.ast.ASTNode;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.FieldBinding;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.IPrivilegedHandler;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.MethodBinding;
+import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding;
 import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;
 
 
@@ -57,7 +58,13 @@ public class PrivilegedHandler implements IPrivilegedHandler {
 	public MethodBinding getPrivilegedAccessMethod(MethodBinding baseMethod, ASTNode location) {
 		if (baseMethod.alwaysNeedsAccessMethod()) return baseMethod;
 
-		ResolvedMember key = inAspect.factory.makeResolvedMember(baseMethod);
+		ResolvedMember key = null;
+		
+		if (baseMethod instanceof ParameterizedMethodBinding) {
+			key = inAspect.factory.makeResolvedMember(((ParameterizedMethodBinding)baseMethod).original());
+		} else {
+			key = inAspect.factory.makeResolvedMember(baseMethod);
+		}
 		if (accessors.containsKey(key)) return (MethodBinding)accessors.get(key);
 
 		MethodBinding ret;
@@ -0,0 +1,7 @@
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+@Retention(RetentionPolicy.RUNTIME)
+public @interface MyAnnotation {
+        MyEnum[] value();
+}
\ No newline at end of file
@@ -0,0 +1,21 @@
+import java.util.Arrays;
+
+privileged public aspect MyAspect {
+
+        Object around(MyClass o, MyAnnotation a) :
+                        execution(@MyAnnotation * *(..)) &&
+                        target(o) &&
+                        @annotation(a) {
+                if (!isOneOf(o.getValue(), a.value()))
+                        throw new IllegalStateException(
+                                        o.getValue() +
+                                        " is not one of " +
+                                        Arrays.toString(a.value()));
+                return proceed(o, a);
+        }
+
+        private static final <T> boolean isOneOf(T obj, T[] arr) {
+                for (T el : arr) if (obj == el) return true;
+                return false;
+        }
+}
\ No newline at end of file
@@ -0,0 +1,14 @@
+public class MyClass {
+
+        public MyEnum getValue() {
+                return MyEnum.ONE;
+        }
+
+        @MyAnnotation({ MyEnum.ONE, MyEnum.TWO })
+        public void test() {
+        }
+
+        public static void main(String[] args) {
+                new MyClass().test();
+        }
+}
\ No newline at end of file
@@ -0,0 +1,3 @@
+public enum MyEnum {
+        ONE, TWO, THREE, FOUR, FIVE
+}
\ No newline at end of file
@@ -112,6 +112,11 @@
 	<ajc-test dir="bugs152/pr148537" title="classcast annotation value">
      <compile files="MyClass.java,MyAspect.java" options="-1.5"/>
     </ajc-test>
+    
+	<ajc-test dir="bugs152/pr148545" title="nosuchmethoderror for privileged aspect">
+     <compile files="MyClass.java,MyAspect.java,MyAnnotation.java,MyEnum.java" options="-1.5"/>
+     <run class="MyClass"/>
+    </ajc-test>
 
 	<ajc-test dir="bugs152/pr145391" title="itd calling generic method - 2">
      <compile files="GenericType2.java" options="-1.5"/>
